import cv2
import numpy as np
from google.colab.patches import cv2_imshow

def process_frame(frame):
    mask = np.where((frame[:, :, 0] < 0.8 * frame[:, :, 1]) & (frame[:, :, 0] < 0.8 * frame[:, :, 2]), 0, 1)
    mask = refine_mask(mask)
    mask = np.repeat(mask[:, :, np.newaxis], 3, axis=2)
    mask = mask.astype(frame.dtype)
    result = frame * mask
    return result

def refine_mask(mask):
    refined_mask = np.copy(mask)
    height, width = mask.shape

    for y in range(height):
        for x in range(width):
            if mask[y, x] == 0:
                min_y, max_y = max(0, y - 7), min(height, y + 8)
                min_x, max_x = max(0, x - 7), min(width, x + 8)
                matrix = mask[min_y:max_y, min_x:max_x]
                if np.sum(matrix == 0) == 1:  # Only the center pixel is black
                    refined_mask[y, x] = np.mean(matrix)

    return refined_mask

def create_panorama(video_path, num_frames=30):
    cap = cv2.VideoCapture(video_path)
    processed_frames = []
    frame_count = 0

    while cap.isOpened() and frame_count < num_frames:
        ret, frame = cap.read()
        if not ret:
            break

        result = process_frame(frame)
        x, y, w, h = 810, 671, 80, 240
        roi = result[y:y+h, x:x+w]
        processed_frames.append(roi)

        if roi.size > 0:  # Check if the frame is not empty
            cv2_imshow(roi)
            cv2.waitKey(1)

        frame_count += 1

    cap.release()
    cv2.destroyAllWindows()

    if len(processed_frames) > 0:
        panorama = np.zeros_like(processed_frames[0], dtype=np.uint8)

        for roi in processed_frames:
            roi_mask = roi == 0
            panorama_masked = np.ma.masked_array(panorama, mask=roi_mask)
            roi_masked = np.ma.masked_array(roi, mask=~roi_mask)
            panorama = panorama_masked + roi_masked
            panorama = panorama.data

        cv2.imwrite('panorama.jpg', panorama)
        cv2_imshow(panorama)
    else:
        print("No frames were processed. Please check the video file.")

# Replace 'your_video.mp4' with the name of your video file
create_panorama('/content/IMG_3436.MOV', num_frames=30)
