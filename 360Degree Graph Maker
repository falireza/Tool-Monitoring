import zipfile
import os
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt

# Extract the zip file
zip_file_path = "/mnt/data/tools.zip"
extraction_path = "/mnt/data/tools_images"

with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    zip_ref.extractall(extraction_path)

# Define a function to count white pixels in an image
def count_white_pixels(image_path):
    # Open and crop the image
    img = Image.open(image_path)
    width, height = img.size
    top = 164
    left = 0
    right = width
    bottom = height
    cropped_img = img.crop((left, top, right, bottom))
    
    # Convert the image to numpy array and count white pixels
    np_img = np.array(cropped_img)
    white_pixel_count = np.sum(np_img == 255)
    
    return white_pixel_count

# Process the first 360 images and store the count of white pixels
white_pixel_counts = []

for i in range(1, 361):  # 1 to 360
    image_name = f"tool ({i}).jpg"
    image_path = os.path.join(extraction_path, image_name)
    white_pixel_counts.append(count_white_pixels(image_path))

# Plotting the graph
degrees = list(range(1, 361))
plt.figure(figsize=(14, 6))
plt.plot(degrees, white_pixel_counts, marker='o', linestyle='-')
plt.title('Number of White Pixels vs. Image Number (Degree)')
plt.xlabel('Image Number (Degree)')
plt.ylabel('Number of White Pixels')
plt.grid(True)
plt.tight_layout()
plt.show()
